fixed - check java
fixed - command line args
fixed - SDKVersion = int(re.search('[0-9]{2,3}', str(check_output(adb +' shell getprop ro.build.version.sdk'))).group(0)) doing r"[0-9]{2,3}" return none , fixed don't touch
fixed - linux tcp dependencies me 2 bar print hota h dependencies installed.
fixed - check if dependencies already installed. and don't run installation then
fixed - by waitfordevice - device unauthorised, offline exception...
fixed - try catch in every os.system
fixed - FileNotFoundError: [Errno 2] No such file or directory: 'adb shell getprop ro.product.model'
fixed = b'Dependencies installed successfully. Starting...\n'


======= Signal importer ==============

fixed - Remove TCP entirely
fixed - More than one devices - just ask user to enter.
fixed(depricated) - try to delete jdk zip and installjava while downloading requirements to avoid collisions.
fixed - Zip extracted files with password.

======= adb menu =======

Done - Readme
Done - adb_device_serial_id.py

A lot of things deleted, now this file will be tracked..

======= scrcpy =======
Stop server / thread somehow.

======= Extras (Not urgent cases) =======
RunTime of program.
Control device in tcp mode. So scrcpy is not required.: Control as in send touch signals like WhatsDump does on emulator.
Make TCP work fast by backing up apk in device itself, and on different thread check and download legacy on device itself. - This is default behaviour now.
Create backup inside device (This also solves #24) and pull it on differnet thread. Meanwhile install original on different thread. 
Product demo video.
Done: Your whatsapp database along with other files is in extracted/<username> folder. Give complete path instead.
Done: Add release date.
Done: Automated import/install.
Done: Get unpacked whatsapp.tar only, do not extract. use flag --only-tar.
Done: While outputing the names of folders use double quotes or single quotes everywhere, appropriately. 
Ask to log password.